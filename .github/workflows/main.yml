# This is a basic workflow to help you get started with Actions

name: BUILD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ develop ]
  # pull_request:
  #   branches: [ feature/Feature-github-workflow ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: "Execution Permission"
      run: chmod -R +x ./.github/workflows/scripts

    # Install Flutter
    - name: "Install Flutter"
      run: ./.github/workflows/scripts/install-flutter.sh stable # or: beta

    # Install Tools
    - name: "Install Tools"
      run: ./.github/workflows/scripts/install-tools.sh
    
    # Write a pikobar.keystore file from a base64-encoded string
    - name: "Write Keystore"
      id: write_keystore
      uses: timheuer/base64-to-file@v1.0.3
      with:
        fileName: 'pikobar.keystore'
        encodedString: ${{ secrets.PIKOBAR_KEY }}

    # Setup Environments
    - name: "Setup Environments"
      run: |
        mv ${{ steps.write_keystore.outputs.filePath }} ./android/pikobar.keystore
        sed -i -e 's/%GEOLOCATION_KEY%/${{ secrets.GEOLOCATION_KEY }}/g' ./android/app/src/main/AndroidManifest.xml
        sed -i -e 's/%GOOGLE_API_KEY%/${{ secrets.GOOGLE_API_KEY }}/g' ./android/app/src/main/AndroidManifest.xml
        echo 'storeFile=pikobar.keystore' > ./android/key.properties
        echo 'storePassword=${{ secrets.PIKOBAR_PASSWORD }}' >> ./android/key.properties
        echo 'keyPassword=${{ secrets.PIKOBAR_PASSWORD }}' >> ./android/key.properties
        echo 'keyAlias=${{ secrets.PIKOBAR_ALIAS }}' >> ./android/key.properties
        echo '${{ secrets.GOOGLE_SERVICES }}' > ./android/app/google-services.json
        echo '${{ secrets.GOOGLE_SERVICES }}' > ./android/app/src/main/google-services.json

    # Build APK
    - name: "Build Release APK"
      run: ./.github/workflows/scripts/flutter-build.sh

    # Send to telegram channel
    - name: "Send APK"
      run: curl -F chat_id='${{ secrets.TELEGRAM_CHAT_ID }}' -F document=@'pikobar-staging.apk' -F caption=PIKOBAR_STAGING https://api.telegram.org/bot'${{ secrets.TELEGRAM_TOKEN }}'/sendDocument
